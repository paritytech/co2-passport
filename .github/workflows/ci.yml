name: CI - Check Set-Up, Build & Test

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [main]
    pull_request:
        branches: [main]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    check:
        # The type of runner that the job will run on
        runs-on: ubuntu-20.04
        env:
            # Fix version to prevent cache misses with nightly changes
            RUST_NIGHTLY: nightly-2023-04-12
            NODE_JS: 16.19.1
            CONTRACTS_NODE_VERSION: v0.24.0
            CARGO_CONTRACT_VERSION: v2.2.1

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v3

            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable

            - name: Install Nightly
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: ${{ env.RUST_NIGHTLY }}
                  override: true
                  components: rustfmt, clippy, rust-src

            - name: Install `cargo-contract`
              uses: actions-rs/cargo@v1
              with:
                  command: install
                  args: --git https://github.com/paritytech/cargo-contract.git --tag ${{ env.CARGO_CONTRACT_VERSION }}

            - name: Install `substrate-contracts-node`
              run: |
                  curl -L -o substrate-contracts-node.tar.gz "https://github.com/paritytech/substrate-contracts-node/releases/download/${{ env.CONTRACTS_NODE_VERSION }}/substrate-contracts-node-linux.tar.gz" && \
                  tar -xf substrate-contracts-node.tar.gz && \
                  echo "$(pwd)/artifacts/substrate-contracts-node-linux" >> $GITHUB_PATH && \
                  chmod +x artifacts/substrate-contracts-node-linux/substrate-contracts-node

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_JS }}

            - name: Install E2E Tests Dependencies
              run: |
                  yarn install

            - name: Output versions
              run: |
                  cargo -vV
                  cargo contract --version
                  substrate-contracts-node --version

            # Fail fast: check formatting first as it doesn't require compilation
            - name: Check formatting
              run: |
                  cargo fmt --check

            - name: Check JS formatting with Prettier
              run: |
                  yarn prettier --check .

            - name: Check JS formatting with ESLint
              run: |
                  yarn run eslint .

            - name: Cache Build artefacts
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{  hashFiles('**/Cargo.lock') }}
                  restore-keys: ${{ runner.os }}-cargo-

            - name: Check Contract Build
              run: |
                  cargo contract check

            - name: Run tests
              run: |
                  cargo test

            - name: Check clippy linting
              run: |
                  cargo clippy --all-features

            - name: Run E2E JS tests
              run: |
                  cargo contract build --release
                  substrate-contracts-node --dev &
                  sleep 10
                  yarn test --exit
