name: CI - Check Set-Up, Build & Test

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, 5-e2e-testing-in-ci ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    env:
      NIGHTLY: nightly-2023-04-12 # Fix version to prevent cache misses with nightly changes

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install Nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.NIGHTLY }}
          override: true
          components: rustfmt, clippy, rust-src

      - name: Install `cargo-contract` `main`
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --git https://github.com/paritytech/cargo-contract.git

      - name: Install `substrate-contracts-node`
        run: |
          curl -L -o substrate-contracts-node.zip 'https://gitlab.parity.io/parity/mirrors/substrate-contracts-node/-/jobs/artifacts/main/download?job=build-linux' && \
          unzip substrate-contracts-node.zip && \
          echo "$(pwd)/artifacts/substrate-contracts-node-linux" >> $GITHUB_PATH && \
          chmod +x artifacts/substrate-contracts-node-linux/substrate-contracts-node

      - name: Output versions
        run: |
            cargo -vV
            cargo contract --version
            substrate-contracts-node --version

      # Fail fast: check formatting first as it doesn't require compilation
      - name: Check formatting
        run: |
          cargo fmt --check

      - name: Cache Build artefacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{  hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Check Contract Build
        run: |
          cargo contract check

      - name: Run tests
        run: |
          cargo test

      - name: Check clippy linting
        run: |
          cargo clippy --all-features
